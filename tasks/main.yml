# vim: ai et ts=2 st=2 sw=2 :
---
- name: check if we're running supported os
  assert:
    fail_msg: "{{ role_name }} only supports ubuntu versions 12, 14, 16, 18 and centos versions 6, 7!"
    success_msg: "{{ role_name }} supports {{ ansible_distribution }} version {{ ansible_distribution_version }}"
    quiet: "{{ not ansible_check_mode }}"
    that:
      ( ansible_distribution|lower == "ubuntu" and ansible_distribution_version|int in [12, 14, 16, 18] )
      or ( ansible_distribution|lower == "centos" and ansible_distribution_major_version|int in [6, 7, 8] )

- name: specific config for debian and redhat systems
  include: "{{ ansible_os_family | lower }}.yml"

- name: install rsyslog
  package:
    name: rsyslog

- name: find rsyslog version
  shell: |
    set -o pipefail
    rsyslogd -v | grep -Eo 'rsyslogd\s+\w+' | cut -d ' ' -f 2
  args:
    executable: /bin/bash
  register: bash_rsyslog_version
  changed_when: false
  failed_when: bash_rsyslog_version.rc != 0

- name: populate rsyslog_version variable
  set_fact:
    rsyslog_version: "{{ bash_rsyslog_version.stdout | int }}"

- name: copy remote syslog config
  template:
    dest: /etc/rsyslog.d/99-remote.conf
    src: 'rsyslog-ver-{{ rsyslog_version | string  }}.conf.j2'
  register: remote_conf

- name: restart rsyslog if remote has changed
  service:
    name: rsyslog
    state: restarted
  when: remote_conf is changed

- name: check if journald.conf exists
  stat:
    path: /etc/systemd/journald.conf
  register: file_journald_conf

- name: update journald.conf
  ini_file:
    path: /etc/systemd/journald.conf
    no_extra_spaces: true
    section: Journal
    option: '{{ item.key }}'
    value: '{{ item.value }}'
  loop:
    - key: ForwardToSyslog
      value: 'yes'
    - key: SystemMaxUse
      value: '{{ rsyslog_journald_size }}'
  register: content_journald_conf
  when: file_journald_conf.stat.exists

- name: restart journald
  service:
    name: systemd-journald
    state: restarted
  when: content_journald_conf is changed


